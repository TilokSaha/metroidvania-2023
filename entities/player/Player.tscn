[gd_scene load_steps=37 format=2]

[ext_resource path="res://entities/player/Character.tscn" type="PackedScene" id=1]
[ext_resource path="res://entities/player/Player.gd" type="Script" id=2]
[ext_resource path="res://resources/tres/PlayerPhysics.tres" type="Resource" id=3]
[ext_resource path="res://resources/tres/PlayerHealth.tres" type="Resource" id=4]
[ext_resource path="res://entities/player/knight_idle_anim_f0.png" type="Texture" id=5]
[ext_resource path="res://entities/player/knight_idle_spritesheet.png" type="Texture" id=6]
[ext_resource path="res://entities/player/knight_run_spritesheet.png" type="Texture" id=7]
[ext_resource path="res://entities/player/Idle.gd" type="Script" id=8]
[ext_resource path="res://entities/player/Run.gd" type="Script" id=9]
[ext_resource path="res://scenes/common/prefabs/Sword.tscn" type="PackedScene" id=10]
[ext_resource path="res://scenes/common/prefabs/Aura.tscn" type="PackedScene" id=11]
[ext_resource path="res://scenes/common/assets/PNG (Transparent)/circle_05.png" type="Texture" id=12]

[sub_resource type="Gradient" id=4]
offsets = PoolRealArray( 0, 0.66383, 1 )
colors = PoolColorArray( 0.785156, 0.0521393, 0.0521393, 1, 0.191406, 0.0829926, 0.0829926, 1, 0.910156, 0.0888824, 0.0888824, 1 )

[sub_resource type="GradientTexture" id=5]
gradient = SubResource( 4 )

[sub_resource type="Curve" id=2]
_data = [ Vector2( 0, 0.288462 ), 0.0, 0.0, 0, 0, Vector2( 0.305556, 1 ), 0.0, 0.0, 0, 0, Vector2( 0.638889, 1 ), 0.0, 0.0, 0, 0, Vector2( 1, 0.134615 ), 0.0, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=3]
curve = SubResource( 2 )

[sub_resource type="ParticlesMaterial" id=31]
emission_shape = 1
emission_sphere_radius = 4.0
flag_disable_z = true
direction = Vector3( 0, -1, 0 )
gravity = Vector3( 0, -60, 0 )
orbit_velocity = 0.0
orbit_velocity_random = 0.0
radial_accel = 15.0
damping = 5.0
damping_random = 0.28
scale = 0.4
scale_curve = SubResource( 3 )
color_ramp = SubResource( 5 )

[sub_resource type="RectangleShape2D" id=1]
extents = Vector2( 3.5, 5 )

[sub_resource type="Animation" id=32]
length = 0.6
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("AnimatedSprite:animation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "Idle" ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("AnimatedSprite:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5 ]
}

[sub_resource type="Animation" id=16]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("AnimatedSprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1 ]
}

[sub_resource type="Animation" id=17]
resource_name = "Run"
length = 0.6
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("AnimatedSprite:animation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "Run" ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("AnimatedSprite:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5 ]
}

[sub_resource type="Shader" id=33]
code = "shader_type canvas_item;

/*
Made with a whole lot of nightmare fuel.
Logic's Under Pressure and Bobby Tarantino II Albums was in rotation during
the making process.
Hope you enjoy!

You're auto-friended to me if you're a Logic fan
RattPack all day!
*/

//image mipmap level, for base upscaling
const int ML = 0;

//equality threshold of 2 colors before forming lines
uniform float THRESHOLD = 0.1;

//anti aliasing scaling, smaller value make lines more blurry
uniform float AA_SCALE = 10.0;

//draw diagonal line connecting 2 pixels if within threshold
bool diag(inout vec4 sum, vec2 uv, vec2 p1, vec2 p2, sampler2D iChannel0, float LINE_THICKNESS) {
    vec4 v1 = texelFetch(iChannel0,ivec2(uv+vec2(p1.x,p1.y)),ML),
        v2 = texelFetch(iChannel0,ivec2(uv+vec2(p2.x,p2.y)),ML);
    if (length(v1-v2) < THRESHOLD) {
    	vec2 dir = p2-p1,
            lp = uv-(floor(uv+p1)+.5);
    	dir = normalize(vec2(dir.y,-dir.x));
        float l = clamp((LINE_THICKNESS-dot(lp,dir))*AA_SCALE,0.,1.);
        sum = mix(sum,v1,l);
    	return true;
    }
    return false;
}

void fragment(){
	//line thickness
	float LINE_THICKNESS;
	vec2 ip = UV * (1.0 / TEXTURE_PIXEL_SIZE);
	
	
		//start with nearest pixel as 'background'
		vec4 s = texelFetch(TEXTURE,ivec2(int(ip.x),int(ip.y)),ML);
		
		//draw anti aliased diagonal lines of surrounding pixels as 'foreground'
		LINE_THICKNESS = 0.4;
		if (diag(s,ip,vec2(-1,0),vec2(0,1), TEXTURE, LINE_THICKNESS)) {
			LINE_THICKNESS = 0.3;
			diag(s,ip,vec2(-1,0),vec2(1,1), TEXTURE, LINE_THICKNESS);
			diag(s,ip,vec2(-1,-1),vec2(0,1), TEXTURE, LINE_THICKNESS);
		}
		LINE_THICKNESS = 0.4;
		if (diag(s,ip,vec2(0,1),vec2(1,0), TEXTURE, LINE_THICKNESS)) {
			LINE_THICKNESS = 0.3;
			diag(s,ip,vec2(0,1),vec2(1,-1), TEXTURE, LINE_THICKNESS);
			diag(s,ip,vec2(-1,1),vec2(1,0), TEXTURE, LINE_THICKNESS);
		}
		LINE_THICKNESS = 0.4;
		if (diag(s,ip,vec2(1,0),vec2(0,-1), TEXTURE, LINE_THICKNESS)) {
			LINE_THICKNESS = 0.3;
			diag(s,ip,vec2(1,0),vec2(-1,-1), TEXTURE, LINE_THICKNESS);
			diag(s,ip,vec2(1,1),vec2(0,-1), TEXTURE, LINE_THICKNESS);
		}
		LINE_THICKNESS = 0.4;
		if (diag(s,ip,vec2(0,-1),vec2(-1,0), TEXTURE, LINE_THICKNESS)) {
			LINE_THICKNESS = 0.3;
			diag(s,ip,vec2(0,-1),vec2(-1,1), TEXTURE, LINE_THICKNESS);
			diag(s,ip,vec2(1,-1),vec2(-1,0), TEXTURE, LINE_THICKNESS);
		}
		
		COLOR = s;
}"

[sub_resource type="ShaderMaterial" id=34]
shader = SubResource( 33 )
shader_param/THRESHOLD = 0.1
shader_param/AA_SCALE = 10.0

[sub_resource type="AtlasTexture" id=19]
atlas = ExtResource( 6 )
region = Rect2( 0, 0, 16, 16 )

[sub_resource type="AtlasTexture" id=20]
atlas = ExtResource( 6 )
region = Rect2( 16, 0, 16, 16 )

[sub_resource type="AtlasTexture" id=21]
atlas = ExtResource( 6 )
region = Rect2( 32, 0, 16, 16 )

[sub_resource type="AtlasTexture" id=22]
atlas = ExtResource( 6 )
region = Rect2( 48, 0, 16, 16 )

[sub_resource type="AtlasTexture" id=23]
atlas = ExtResource( 6 )
region = Rect2( 64, 0, 16, 16 )

[sub_resource type="AtlasTexture" id=24]
atlas = ExtResource( 6 )
region = Rect2( 80, 0, 16, 16 )

[sub_resource type="AtlasTexture" id=25]
atlas = ExtResource( 7 )
region = Rect2( 0, 0, 16, 16 )

[sub_resource type="AtlasTexture" id=26]
atlas = ExtResource( 7 )
region = Rect2( 16, 0, 16, 16 )

[sub_resource type="AtlasTexture" id=27]
atlas = ExtResource( 7 )
region = Rect2( 32, 0, 16, 16 )

[sub_resource type="AtlasTexture" id=28]
atlas = ExtResource( 7 )
region = Rect2( 48, 0, 16, 16 )

[sub_resource type="AtlasTexture" id=29]
atlas = ExtResource( 7 )
region = Rect2( 64, 0, 16, 16 )

[sub_resource type="AtlasTexture" id=30]
atlas = ExtResource( 7 )
region = Rect2( 80, 0, 16, 16 )

[sub_resource type="SpriteFrames" id=18]
animations = [ {
"frames": [ SubResource( 19 ), SubResource( 20 ), SubResource( 21 ), SubResource( 22 ), SubResource( 23 ), SubResource( 24 ) ],
"loop": true,
"name": "Idle",
"speed": 5.0
}, {
"frames": [ SubResource( 25 ), SubResource( 26 ), SubResource( 27 ), SubResource( 28 ), SubResource( 29 ), SubResource( 30 ) ],
"loop": true,
"name": "Run",
"speed": 5.0
} ]

[node name="Player" instance=ExtResource( 1 )]
collision_layer = 2
collision_mask = 5
script = ExtResource( 2 )
physics = ExtResource( 3 )
health = ExtResource( 4 )

[node name="Aura" parent="." index="0" instance=ExtResource( 11 )]
emitting = false
process_material = SubResource( 31 )

[node name="Sprite" parent="." index="1"]
visible = false
texture = ExtResource( 5 )
offset = Vector2( -1, -3 )

[node name="CollisionShape2D" parent="." index="2"]
position = Vector2( 0, -2 )
shape = SubResource( 1 )

[node name="Idle" type="Node2D" parent="StateMachine" index="0"]
script = ExtResource( 8 )
state_name = "Idle"

[node name="Run" type="Node2D" parent="StateMachine" index="1"]
script = ExtResource( 9 )
state_name = "Run"

[node name="AnimationPlayer" parent="." index="4"]
anims/Idle = SubResource( 32 )
anims/RESET = SubResource( 16 )
anims/Run = SubResource( 17 )

[node name="AnimatedSprite" parent="." index="5"]
material = SubResource( 34 )
frames = SubResource( 18 )
animation = "Run"
frame = 1

[node name="Sword" parent="." index="8" instance=ExtResource( 10 )]

[node name="Light2D" type="Light2D" parent="." index="9"]
texture = ExtResource( 12 )
texture_scale = 0.4
mode = 2
shadow_enabled = true
